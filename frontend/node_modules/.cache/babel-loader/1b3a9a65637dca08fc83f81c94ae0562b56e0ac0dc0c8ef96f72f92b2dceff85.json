{"ast":null,"code":"var _jsxFileName = \"/Users/ripalshah/myofunctional-app/frontend/src/components/LogProgress.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/LogProgress.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogProgress = () => {\n  _s();\n  const [progressData, setProgressData] = useState({\n    exercisePlanId: '',\n    exercises: [{\n      exerciseTitle: '',\n      status: ''\n    }],\n    sessionNotes: ''\n  });\n\n  // Use useCallback to memoize the fetchExercisePlan function\n  const fetchExercisePlan = useCallback(async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/exercise/patient-plan/your-patient-id', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setProgressData(prevData => ({\n        ...prevData,\n        exercisePlanId: res.data._id,\n        exercises: res.data.exercises.map(ex => ({\n          exerciseTitle: ex.title,\n          status: ''\n        }))\n      }));\n    } catch (error) {\n      console.error(error);\n    }\n  }, []); // Empty dependency array means this function will only be created once\n\n  useEffect(() => {\n    fetchExercisePlan();\n  }, [fetchExercisePlan]); // Add fetchExercisePlan to the dependency array\n\n  const onChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const exercises = [...progressData.exercises];\n    exercises[index][name] = value;\n    setProgressData({\n      ...progressData,\n      exercises\n    });\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/api/progress/log-progress', progressData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      alert(res.data.message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), progressData.exercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: exercise.exerciseTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: exercise.status,\n        onChange: e => onChange(e, index),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"skipped\",\n          children: \"Skipped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"incomplete\",\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"sessionNotes\",\n      placeholder: \"Session Notes\",\n      value: progressData.sessionNotes,\n      onChange: e => setProgressData({\n        ...progressData,\n        sessionNotes: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(LogProgress, \"k9d0/1QXAtIs6b9ra54rm6rhIns=\");\n_c = LogProgress;\nexport default LogProgress;\nvar _c;\n$RefreshReg$(_c, \"LogProgress\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","LogProgress","_s","progressData","setProgressData","exercisePlanId","exercises","exerciseTitle","status","sessionNotes","fetchExercisePlan","res","get","headers","Authorization","localStorage","getItem","prevData","data","_id","map","ex","title","error","console","onChange","e","index","name","value","target","onSubmit","preventDefault","post","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","exercise","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/ripalshah/myofunctional-app/frontend/src/components/LogProgress.js"],"sourcesContent":["// frontend/src/components/LogProgress.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nconst LogProgress = () => {\n    const [progressData, setProgressData] = useState({\n        exercisePlanId: '',\n        exercises: [{ exerciseTitle: '', status: '' }],\n        sessionNotes: '',\n    });\n\n    // Use useCallback to memoize the fetchExercisePlan function\n    const fetchExercisePlan = useCallback(async () => {\n        try {\n            const res = await axios.get('http://localhost:5000/api/exercise/patient-plan/your-patient-id', {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            });\n            setProgressData((prevData) => ({\n                ...prevData,\n                exercisePlanId: res.data._id,\n                exercises: res.data.exercises.map((ex) => ({ exerciseTitle: ex.title, status: '' })),\n            }));\n        } catch (error) {\n            console.error(error);\n        }\n    }, []); // Empty dependency array means this function will only be created once\n\n    useEffect(() => {\n        fetchExercisePlan();\n    }, [fetchExercisePlan]); // Add fetchExercisePlan to the dependency array\n\n    const onChange = (e, index) => {\n        const { name, value } = e.target;\n        const exercises = [...progressData.exercises];\n        exercises[index][name] = value;\n        setProgressData({ ...progressData, exercises });\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const res = await axios.post('http://localhost:5000/api/progress/log-progress', progressData, {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            });\n            alert(res.data.message);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2>Log Progress</h2>\n            {progressData.exercises.map((exercise, index) => (\n                <div key={index}>\n                    <label>{exercise.exerciseTitle}</label>\n                    <select name=\"status\" value={exercise.status} onChange={(e) => onChange(e, index)}>\n                        <option value=\"\">Select Status</option>\n                        <option value=\"completed\">Completed</option>\n                        <option value=\"skipped\">Skipped</option>\n                        <option value=\"incomplete\">Incomplete</option>\n                    </select>\n                </div>\n            ))}\n            <textarea\n                name=\"sessionNotes\"\n                placeholder=\"Session Notes\"\n                value={progressData.sessionNotes}\n                onChange={(e) => setProgressData({ ...progressData, sessionNotes: e.target.value })}\n            />\n            <button type=\"submit\">Submit Progress</button>\n        </form>\n    );\n};\n\nexport default LogProgress;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC;IAC7CU,cAAc,EAAE,EAAE;IAClBC,SAAS,EAAE,CAAC;MAAEC,aAAa,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC;IAC9CC,YAAY,EAAE;EAClB,CAAC,CAAC;;EAEF;EACA,MAAMC,iBAAiB,GAAGb,WAAW,CAAC,YAAY;IAC9C,IAAI;MACA,MAAMc,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,iEAAiE,EAAE;QAC3FC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAAG;MACxE,CAAC,CAAC;MACFZ,eAAe,CAAEa,QAAQ,KAAM;QAC3B,GAAGA,QAAQ;QACXZ,cAAc,EAAEM,GAAG,CAACO,IAAI,CAACC,GAAG;QAC5Bb,SAAS,EAAEK,GAAG,CAACO,IAAI,CAACZ,SAAS,CAACc,GAAG,CAAEC,EAAE,KAAM;UAAEd,aAAa,EAAEc,EAAE,CAACC,KAAK;UAAEd,MAAM,EAAE;QAAG,CAAC,CAAC;MACvF,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER3B,SAAS,CAAC,MAAM;IACZc,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC,CAAC,CAAC;;EAEzB,MAAMe,QAAQ,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC3B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGH,CAAC,CAACI,MAAM;IAChC,MAAMxB,SAAS,GAAG,CAAC,GAAGH,YAAY,CAACG,SAAS,CAAC;IAC7CA,SAAS,CAACqB,KAAK,CAAC,CAACC,IAAI,CAAC,GAAGC,KAAK;IAC9BzB,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAEG;IAAU,CAAC,CAAC;EACnD,CAAC;EAED,MAAMyB,QAAQ,GAAG,MAAOL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMrB,GAAG,GAAG,MAAMb,KAAK,CAACmC,IAAI,CAAC,iDAAiD,EAAE9B,YAAY,EAAE;QAC1FU,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAAG;MACxE,CAAC,CAAC;MACFkB,KAAK,CAACvB,GAAG,CAACO,IAAI,CAACiB,OAAO,CAAC;IAC3B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAM+B,QAAQ,EAAEA,QAAS;IAAAK,QAAA,gBACrBpC,OAAA;MAAAoC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBrC,YAAY,CAACG,SAAS,CAACc,GAAG,CAAC,CAACqB,QAAQ,EAAEd,KAAK,kBACxC3B,OAAA;MAAAoC,QAAA,gBACIpC,OAAA;QAAAoC,QAAA,EAAQK,QAAQ,CAAClC;MAAa;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvCxC,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAEY,QAAQ,CAACjC,MAAO;QAACiB,QAAQ,EAAGC,CAAC,IAAKD,QAAQ,CAACC,CAAC,EAAEC,KAAK,CAAE;QAAAS,QAAA,gBAC9EpC,OAAA;UAAQ6B,KAAK,EAAC,EAAE;UAAAO,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCxC,OAAA;UAAQ6B,KAAK,EAAC,WAAW;UAAAO,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5CxC,OAAA;UAAQ6B,KAAK,EAAC,SAAS;UAAAO,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCxC,OAAA;UAAQ6B,KAAK,EAAC,YAAY;UAAAO,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA,GAPHb,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACR,CAAC,eACFxC,OAAA;MACI4B,IAAI,EAAC,cAAc;MACnBc,WAAW,EAAC,eAAe;MAC3Bb,KAAK,EAAE1B,YAAY,CAACM,YAAa;MACjCgB,QAAQ,EAAGC,CAAC,IAAKtB,eAAe,CAAC;QAAE,GAAGD,YAAY;QAAEM,YAAY,EAAEiB,CAAC,CAACI,MAAM,CAACD;MAAM,CAAC;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,eACFxC,OAAA;MAAQ2C,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEf,CAAC;AAACtC,EAAA,CArEID,WAAW;AAAA2C,EAAA,GAAX3C,WAAW;AAuEjB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}