{"ast":null,"code":"// frontend/src/components/PatientDashboard.js\nimport React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PatientDashboard=()=>{const[appointments,setAppointments]=useState([]);useEffect(()=>{const fetchAppointments=async()=>{try{const response=await axios.get('http://localhost:5002/api/appointments/1',{headers:{'x-auth-token':localStorage.getItem('token')}});console.log('Fetched appointments:',response.data);setAppointments(response.data);// Store fetched appointments in state\n}catch(error){console.error('Error fetching appointments:',error);}};fetchAppointments();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Appointments\"}),appointments.length>0?/*#__PURE__*/_jsx(\"ul\",{children:appointments.map(appt=>/*#__PURE__*/_jsxs(\"li\",{children:[appt.date,\" - \",appt.time,\" with Therapist \",appt.therapistId]},appt._id))}):/*#__PURE__*/_jsx(\"p\",{children:\"No appointments available.\"})]});};export default PatientDashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","PatientDashboard","appointments","setAppointments","fetchAppointments","response","get","headers","localStorage","getItem","console","log","data","error","children","length","map","appt","date","time","therapistId","_id"],"sources":["/Users/ripalshah/myofunctional-app/frontend/src/components/PatientDashboard.js"],"sourcesContent":["// frontend/src/components/PatientDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst PatientDashboard = () => {\n    const [appointments, setAppointments] = useState([]);\n\n    useEffect(() => {\n        const fetchAppointments = async () => {\n            try {\n                const response = await axios.get('http://localhost:5002/api/appointments/1', {\n                    headers: { 'x-auth-token': localStorage.getItem('token') }\n                });\n                console.log('Fetched appointments:', response.data); \n                setAppointments(response.data);  // Store fetched appointments in state\n            } catch (error) {\n                console.error('Error fetching appointments:', error);\n            }\n        };\n\n        fetchAppointments();\n    }, []);\n\n    return (\n        <div>\n            <h2>Your Appointments</h2>\n            {appointments.length > 0 ? (\n                <ul>\n                    {appointments.map(appt => (\n                        <li key={appt._id}>\n                            {appt.date} - {appt.time} with Therapist {appt.therapistId}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No appointments available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default PatientDashboard;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAS,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAACU,GAAG,CAAC,0CAA0C,CAAE,CACzEC,OAAO,CAAE,CAAE,cAAc,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,CAC7D,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEN,QAAQ,CAACO,IAAI,CAAC,CACnDT,eAAe,CAACE,QAAQ,CAACO,IAAI,CAAC,CAAG;AACrC,CAAE,MAAOC,KAAK,CAAE,CACZH,OAAO,CAACG,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACxD,CACJ,CAAC,CAEDT,iBAAiB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIJ,KAAA,QAAAc,QAAA,eACIhB,IAAA,OAAAgB,QAAA,CAAI,mBAAiB,CAAI,CAAC,CACzBZ,YAAY,CAACa,MAAM,CAAG,CAAC,cACpBjB,IAAA,OAAAgB,QAAA,CACKZ,YAAY,CAACc,GAAG,CAACC,IAAI,eAClBjB,KAAA,OAAAc,QAAA,EACKG,IAAI,CAACC,IAAI,CAAC,KAAG,CAACD,IAAI,CAACE,IAAI,CAAC,kBAAgB,CAACF,IAAI,CAACG,WAAW,GADrDH,IAAI,CAACI,GAEV,CACP,CAAC,CACF,CAAC,cAELvB,IAAA,MAAAgB,QAAA,CAAG,4BAA0B,CAAG,CACnC,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAb,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}